#ifndef MYY_BIGNUM_H
#define MYY_BIGNUM_H

#include <myy/env.h>

__CPP_BEGIN

//大端存储，高32位存在低地址，低32位存在高地址
typedef uint32_t BN_256[8];

#define bn_256_is_zero(n) (((n)[0]==0)&&\
                                ((n)[1]==0)&&\
                                ((n)[2]==0)&&\
                                ((n)[3]==0)&&\
                                ((n)[4]==0)&&\
                                ((n)[5]==0)&&\
                                ((n)[6]==0)&&\
                                ((n)[7]==0))

#define bn_256_xor(r,a,b) (r)[0]=(a)[0]^(b)[0];\
                            (r)[1]=(a)[1]^(b)[1];\
                            (r)[2]=(a)[2]^(b)[2];\
                            (r)[3]=(a)[3]^(b)[3];\
                            (r)[4]=(a)[4]^(b)[4];\
                            (r)[5]=(a)[5]^(b)[5];\
                            (r)[6]=(a)[6]^(b)[6];\
                            (r)[7]=(a)[7]^(b)[7]

#define bn_256_and(r,a,b) (r)[0]=(a)[0]&(b)[0];\
                            (r)[1]=(a)[1]&(b)[1];\
                            (r)[2]=(a)[2]&(b)[2];\
                            (r)[3]=(a)[3]&(b)[3];\
                            (r)[4]=(a)[4]&(b)[4];\
                            (r)[5]=(a)[5]&(b)[5];\
                            (r)[6]=(a)[6]&(b)[6];\
                            (r)[7]=(a)[7]&(b)[7]

#define bn_256_left(n,x) (n)[0]=((n)[0]<<x)|((n)[1]>>(32-x));\
                            (n)[1]=((n)[1]<<x)|((n)[2]>>(32-x));\
                            (n)[2]=((n)[2]<<x)|((n)[3]>>(32-x));\
                            (n)[3]=((n)[3]<<x)|((n)[4]>>(32-x));\
                            (n)[4]=((n)[4]<<x)|((n)[5]>>(32-x));\
                            (n)[5]=((n)[5]<<x)|((n)[6]>>(32-x));\
                            (n)[6]=((n)[6]<<x)|((n)[7]>>(32-x));\
                            (n)[7]=((n)[7]<<x)

extern void bn_add_256      (BN_256 r, BN_256 a, BN_256 b);
extern int  bin_2_bn_256    (BN_256 bn, const char* bin);
extern void bn_2_bin_256    (BN_256 bn, char* bin);
extern void bn_zero_256     (BN_256 bn);

#define BN_ZERO_256 {0,0,0,0,0,0,0,0}

__CPP_END

#endif
